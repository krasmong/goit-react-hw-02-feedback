{"version":3,"sources":["components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.js","components/Statistics/Statistics.js","App.js","index.js","components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["Section","title","children","FeedbackOptions","options","onLeaveFeedback","className","s","map","option","button","type","data-feedback","onClick","kay","Notification","message","Statistics","good","neutral","bad","total","positiveFeedbackPercentage","box","App","state","countTotalFeedback","countPositiveFeedbackPercentage","totalFeedback","Math","round","handleFeedback","feedback","target","dataset","setState","prevState","this","totalFeedbackCount","positiveFeedback","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"gQAceA,EAZC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,gCACE,6BAAKD,IACJC,M,gBCmBUC,EApBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACtB,qBAAKC,UAAWC,IAAEH,QAAlB,SACGA,EAAQI,KAAI,SAAAC,GAAM,OACjB,wBACEH,UAAWC,IAAEG,OACbC,KAAK,SACLC,gBAAeH,EACfI,QAASR,EACTS,IAAKL,EALP,SAMGA,U,gBCXM,SAASM,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OAAO,4BAAIA,ICCb,IAgCeC,EAhCI,SAAC,GAAD,IACjBC,EADiB,EACjBA,KACAC,EAFiB,EAEjBA,QACAC,EAHiB,EAGjBA,IACAC,EAJiB,EAIjBA,MACAC,EALiB,EAKjBA,2BALiB,OAOjB,mCACGD,EACC,qBAAIf,UAAWC,IAAEgB,IAAjB,UACE,qBAAIjB,UAAWC,IAAEH,QAAjB,oBAAkCc,EAAlC,OACA,qBAAIZ,UAAWC,IAAEH,QAAjB,uBAAqCe,EAArC,OACA,qBAAIb,UAAWC,IAAEH,QAAjB,mBAAiCgB,EAAjC,OACA,qBAAId,UAAWC,IAAEH,QAAjB,qBAAmCiB,EAAnC,OACA,qBAAIf,UAAWC,IAAEH,QAAjB,gCACsBkB,EADtB,UAKF,cAACP,EAAD,CAAcC,QAAQ,yBClBtBZ,EAAU,CAAC,OAAQ,MAAO,WAuDjBoB,E,4MApDbC,MAAQ,CACNP,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPM,mBAAqB,WAAO,IAAD,EACM,EAAKD,MAA5BP,EADiB,EACjBA,KAAMC,EADW,EACXA,QACd,OAAOD,EAFkB,EACFE,IACHD,G,EAGtBQ,gCAAkC,WAChC,IAAIC,EAAgB,EAAKF,qBACjBR,EAAS,EAAKO,MAAdP,KACR,OAAOU,EAAgBC,KAAKC,MAAOZ,EAAOU,EAAiB,KAAO,G,EAGpEG,eAAiB,YAAiB,IACxBC,EADuB,EAAbC,OACUC,QAApBF,SACR,EAAKG,UAAS,SAAAC,GACZ,OAAO,eAAGJ,EAAWI,EAAUJ,GAAY,O,4CAI/C,WAAU,IAAD,EACwBK,KAAKZ,MAA5BP,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACjBkB,EAAqBD,KAAKX,qBAC1Ba,EAAmBF,KAAKV,kCAE9B,OACE,qCACE,cAAC,EAAD,CAAS1B,MAAO,wBAAhB,SACE,cAAC,EAAD,CACEG,QAASA,EACTC,gBAAiBgC,KAAKN,mBAI1B,cAAC,EAAD,CAAS9B,MAAO,aAAhB,SACE,cAAC,EAAD,CACEiB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOiB,EACPhB,2BAA4BiB,a,GA7CtBC,aCFlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,IAAM,wBAAwB,QAAU,8B,kBCA1DD,EAAOC,QAAU,CAAC,QAAU,iCAAiC,OAAS,mC","file":"static/js/main.0e2f7ea0.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => (\r\n  <div>\r\n    <h2>{title}</h2>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Section;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './FeedbackOptions.module.css';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\r\n  <div className={s.options}>\r\n    {options.map(option => (\r\n      <button\r\n        className={s.button}\r\n        type=\"button\"\r\n        data-feedback={option}\r\n        onClick={onLeaveFeedback}\r\n        kay={option}>\r\n        {option}\r\n      </button>\r\n    ))}\r\n  </div>\r\n);\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.array,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import PropTypes from 'prop-types';\r\n\r\nexport default function Notification({ message }) {\r\n  return <p>{message}</p>;\r\n}\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport s from './Statistics.module.css';\r\nimport Notification from '../Notification/Notification';\r\n\r\nconst Statistics = ({\r\n  good,\r\n  neutral,\r\n  bad,\r\n  total,\r\n  positiveFeedbackPercentage,\r\n}) => (\r\n  <>\r\n    {total ? (\r\n      <ul className={s.box}>\r\n        <li className={s.options}> Good: {good} </li>\r\n        <li className={s.options}> Neutral: {neutral} </li>\r\n        <li className={s.options}> Bad: {bad} </li>\r\n        <li className={s.options}> Total: {total} </li>\r\n        <li className={s.options}>\r\n          Positive feedback: {positiveFeedbackPercentage}%\r\n        </li>\r\n      </ul>\r\n    ) : (\r\n      <Notification message=\"No feedback given\" />\r\n    )}\r\n  </>\r\n);\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positiveFeedbackPercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React, { Component } from 'react';\nimport Section from './components/Section/Section';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Statistics from './components/Statistics/Statistics';\n\nconst options = ['good', 'bad', 'neutral'];\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + bad + neutral;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    let totalFeedback = this.countTotalFeedback();\n    const { good } = this.state;\n    return totalFeedback ? Math.round((good / totalFeedback) * 100) : 0;\n  };\n\n  handleFeedback = ({ target }) => {\n    const { feedback } = target.dataset;\n    this.setState(prevState => {\n      return { [feedback]: prevState[feedback] + 1 };\n    });\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const totalFeedbackCount = this.countTotalFeedback();\n    const positiveFeedback = this.countPositiveFeedbackPercentage();\n\n    return (\n      <>\n        <Section title={'Please leave feedback'}>\n          <FeedbackOptions\n            options={options}\n            onLeaveFeedback={this.handleFeedback}\n          />\n        </Section>\n\n        <Section title={'Statistics'}>\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={totalFeedbackCount}\n            positiveFeedbackPercentage={positiveFeedback}\n          />\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"Statistics_box__25i_J\",\"options\":\"Statistics_options__VkSqt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"options\":\"FeedbackOptions_options__27Pox\",\"button\":\"FeedbackOptions_button__2cqG3\"};"],"sourceRoot":""}